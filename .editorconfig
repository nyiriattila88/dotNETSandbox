####################################################################################
#
# 1) Common Settings
#
####################################################################################

# This file is the top-most EditorConfig file
root = true

# All Files
[*]
charset = utf-8
indent_style = space
indent_size = 4
insert_final_newline = false
trim_trailing_whitespace = true


####################################################################################
#
# 2) File Extension Settings
#
####################################################################################

# Visual Studio Solution Files
[*.sln]
indent_style = tab

# Visual Studio XML Project Files
[*.{csproj,vbproj,vcxproj.filters,proj,projitems,shproj}]
indent_size = 2

# XML Configuration Files
[*.{xml,config,props,targets,nuspec,resx,ruleset,vsixmanifest,vsct}]
indent_size = 2

# JSON Files
[*.{json,json5,webmanifest}]
indent_size = 2

# YAML Files
[*.{yml,yaml}]
indent_size = 2

# Markdown Files
[*.{md,mdx}]
trim_trailing_whitespace = false

# Web Files
[*.{htm,html,js,jsm,ts,tsx,cjs,cts,ctsx,mjs,mts,mtsx,css,sass,scss,less,pcss,svg,vue}]
indent_size = 2

# Batch Files
[*.{cmd,bat}]
end_of_line = crlf

# Bash Files
[*.sh]
end_of_line = lf

# Makefiles
[Makefile]
indent_style = tab


####################################################################################
#
# 3) .NET Analyzer Diagnostic Default Severity
# https://docs.microsoft.com/dotnet/fundamentals/code-analysis/configuration-options#scope
#
####################################################################################
[*.{cs,csx,cake,vb,vbx}]

# Default severity level for ALL Analyzer rules - https://docs.microsoft.com/dotnet/fundamentals/code-analysis/configuration-options#scope
dotnet_analyzer_diagnostic.severity = suggestion


####################################################################################
#
# 4) .NET Code Style Rules
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/
#
####################################################################################
[*.{cs,csx,cake,vb,vbx}]

# Default severity level of Style rules - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/
dotnet_analyzer_diagnostic.category-Style.severity = suggestion


##########################################
# 4.1) Language Rules
# https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/language-rules
##########################################


# 4.1.1) "this." and "Me." qualifiers

# IDE0003: Remove this or Me qualification - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0003-ide0009
dotnet_diagnostic.IDE0003.severity = suggestion
# IDE0009: Add this or Me qualification - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0003-ide0009
dotnet_diagnostic.IDE0009.severity = suggestion
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0003-ide0009#dotnet_style_qualification_for_field
dotnet_style_qualification_for_field = false
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0003-ide0009#dotnet_style_qualification_for_property
dotnet_style_qualification_for_property = false
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0003-ide0009#dotnet_style_qualification_for_method
dotnet_style_qualification_for_method = false
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0003-ide0009#dotnet_style_qualification_for_event
dotnet_style_qualification_for_event = false


# 4.1.2) Use language keywords for types

# IDE0049: Use language keywords instead of framework type names for type references - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0049
dotnet_diagnostic.IDE0049.severity = suggestion
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0049#dotnet_style_predefined_type_for_locals_parameters_members
dotnet_style_predefined_type_for_locals_parameters_members = true
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0049#dotnet_style_predefined_type_for_member_access
dotnet_style_predefined_type_for_member_access = true


# 4.1.3) Modifier preferences
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/modifier-preferences

# IDE0036: Order modifiers - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0036
dotnet_diagnostic.IDE0036.severity = suggestion
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0036#csharp_preferred_modifier_order
csharp_preferred_modifier_order = public, private, protected, internal, static, extern, new, virtual, abstract, sealed, override, readonly, unsafe, volatile, async
visual_basic_preferred_modifier_order = Partial, Default, Private, Protected, Public, Friend, NotOverridable, Overridable, MustOverride, Overloads, Overrides, MustInherit, NotInheritable, Static, Shared, Shadows, ReadOnly, WriteOnly, Dim, Const, WithEvents, Widening, Narrowing, Custom, Async

# IDE0040: Add accessibility modifiers - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0040
dotnet_diagnostic.IDE0040.severity = suggestion
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0040#dotnet_style_require_accessibility_modifiers
dotnet_style_require_accessibility_modifiers = always

# IDE0044: Add readonly modifier - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0044
dotnet_diagnostic.IDE0044.severity = suggestion
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0044#dotnet_style_readonly_field
dotnet_style_readonly_field = true

# IDE0062: Make local function static - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0062
dotnet_diagnostic.IDE0062.severity = suggestion
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0062#csharp_prefer_static_local_function
csharp_prefer_static_local_function = true

# IDE0064: Make local function static - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0064
dotnet_diagnostic.IDE0064.severity = suggestion


# 4.1.4) Parentheses preferences

# IDE0047: Remove unnecessary parentheses - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0047-ide0048
dotnet_diagnostic.IDE0047.severity = suggestion
# IDE0048: Add parentheses for clarity - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0047-ide0048
dotnet_diagnostic.IDE0048.severity = suggestion
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0047-ide0048#dotnet_style_parentheses_in_arithmetic_binary_operators
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0047-ide0048#dotnet_style_parentheses_in_relational_binary_operators
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0047-ide0048#dotnet_style_parentheses_in_other_binary_operators
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0047-ide0048#dotnet_style_parentheses_in_other_operators
dotnet_style_parentheses_in_other_operators = never_if_unnecessary


# 4.1.5) Expression-level preferences
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/expression-level-preferences

# IDE0010: Add missing cases to switch statement - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0010
dotnet_diagnostic.IDE0010.severity = suggestion

# IDE0017: Use object initializers - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0017
dotnet_diagnostic.IDE0017.severity = suggestion
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0017#dotnet_style_object_initializer
dotnet_style_object_initializer = true

# IDE0018: Inline variable declaration - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0018
dotnet_diagnostic.IDE0018.severity = suggestion
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0018#csharp_style_inlined_variable_declaration
csharp_style_inlined_variable_declaration = true

# IDE0028: Use collection initializers - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0028
dotnet_diagnostic.IDE0028.severity = suggestion
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0028#dotnet_style_collection_initializer
dotnet_style_collection_initializer = true

# IDE0032: Use auto property - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0032
dotnet_diagnostic.IDE0032.severity = suggestion
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0032#dotnet_style_prefer_auto_properties
dotnet_style_prefer_auto_properties = true

# IDE0033: Use explicitly provided tuple name - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0033
dotnet_diagnostic.IDE0033.severity = suggestion
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0033#dotnet_style_explicit_tuple_names
dotnet_style_explicit_tuple_names = true

# IDE0034: Simplify default expression - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0034
dotnet_diagnostic.IDE0034.severity = suggestion
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0034#csharp_prefer_simple_default_expression
csharp_prefer_simple_default_expression = true

# IDE0037: Use inferred member name - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0037
dotnet_diagnostic.IDE0037.severity = suggestion
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0037#dotnet_style_prefer_inferred_tuple_names
dotnet_style_prefer_inferred_tuple_names = true
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0037#dotnet_style_prefer_inferred_anonymous_type_member_names
dotnet_style_prefer_inferred_anonymous_type_member_names = true

# IDE0039: Use local function instead of lambda - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0039
dotnet_diagnostic.IDE0039.severity = suggestion
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0039#csharp_style_pattern_local_over_anonymous_function
csharp_style_pattern_local_over_anonymous_function = true

# IDE0042: Deconstruct variable declaration - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0042
dotnet_diagnostic.IDE0042.severity = suggestion
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0042#csharp_style_deconstructed_variable_declaration
csharp_style_deconstructed_variable_declaration = true

# IDE0045: Use conditional expression for assignment - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0045
dotnet_diagnostic.IDE0045.severity = suggestion
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0045#dotnet_style_prefer_conditional_expression_over_assignment
dotnet_style_prefer_conditional_expression_over_assignment = true

# IDE0046: Use conditional expression for return - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0046
dotnet_diagnostic.IDE0046.severity = suggestion
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0046#dotnet_style_prefer_conditional_expression_over_return
dotnet_style_prefer_conditional_expression_over_return = true

# IDE0050: Convert anonymous type to tuple - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0050
dotnet_diagnostic.IDE0050.severity = suggestion

# IDE0054: Use compound assignment - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0054-ide0074
dotnet_diagnostic.IDE0054.severity = suggestion
# IDE0074: Use coalesce compound assignment - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0054-ide0074
dotnet_diagnostic.IDE0074.severity = suggestion
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0054-ide0074#dotnet_style_prefer_compound_assignment
dotnet_style_prefer_compound_assignment = true

# IDE0056: Use index operator - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0056
dotnet_diagnostic.IDE0056.severity = suggestion
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0056#csharp_style_prefer_index_operator
csharp_style_prefer_index_operator = true

# IDE0057: Use range operator - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0057
dotnet_diagnostic.IDE0057.severity = suggestion
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0057#csharp_style_prefer_range_operator
csharp_style_prefer_range_operator = true

# IDE0070: Use System.HashCode.Combine - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0070
dotnet_diagnostic.IDE0070.severity = suggestion

# IDE0071: Simplify interpolation - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0071
dotnet_diagnostic.IDE0071.severity = suggestion
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0071#dotnet_style_prefer_simplified_interpolation
dotnet_style_prefer_simplified_interpolation = true

# IDE0072: Add missing cases to switch expression - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0072
dotnet_diagnostic.IDE0072.severity = suggestion

# IDE0075: Simplify conditional expression - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0075
dotnet_diagnostic.IDE0075.severity = suggestion
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0075#dotnet_style_prefer_simplified_boolean_expressions
dotnet_style_prefer_simplified_boolean_expressions = true

# IDE0082: Convert typeof to nameof - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0082
dotnet_diagnostic.IDE0082.severity = suggestion

# IDE0090: Simplify new expression - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0090
dotnet_diagnostic.IDE0090.severity = suggestion
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0090#csharp_style_implicit_object_creation_when_type_is_apparent
csharp_style_implicit_object_creation_when_type_is_apparent = true


# 4.1.6) Namespace declaration preferences
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0160-ide0161

# IDE0160: Use block-scoped namespace - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0160-ide0161
dotnet_diagnostic.IDE0160.severity = suggestion
# IDE0161: Use file-scoped namespace - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0160-ide0161
dotnet_diagnostic.IDE0161.severity = suggestion
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0160-ide0161#csharp_style_namespace_declarations
csharp_style_namespace_declarations = file_scoped


# 4.1.7) Null-checking preferences
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/null-checking-preferences

# IDE0016: Use throw expression - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0016
dotnet_diagnostic.IDE0016.severity = suggestion
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0016#csharp_style_throw_expression
csharp_style_throw_expression = true

# IDE0029: Use coalesce expression (non-nullable types) - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0029-ide0030
dotnet_diagnostic.IDE0029.severity = suggestion
# IDE0030: Use coalesce expression (nullable types) - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0029-ide0030
dotnet_diagnostic.IDE0030.severity = suggestion
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0029-ide0030#dotnet_style_coalesce_expression
dotnet_style_coalesce_expression = true

# IDE0031: Use null propagation - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0031
dotnet_diagnostic.IDE0031.severity = suggestion
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0031#dotnet_style_null_propagation
dotnet_style_null_propagation = true

# IDE0041: Use is null check - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0041
dotnet_diagnostic.IDE0041.severity = suggestion
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0041#dotnet_style_prefer_is_null_check_over_reference_equality_method
dotnet_style_prefer_is_null_check_over_reference_equality_method = true

# IDE1005: Use conditional delegate call - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide1005
dotnet_diagnostic.IDE1005.severity = suggestion
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide1005#csharp_style_conditional_delegate_call
csharp_style_conditional_delegate_call = true


# 4.1.8) var preferences

# IDE0007: Use 'var' instead of explicit type - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0007-ide0008
dotnet_diagnostic.IDE0007.severity = suggestion
# IDE0008: Use explicit type instead of 'var' - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0007-ide0008
dotnet_diagnostic.IDE0008.severity = suggestion
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0007-ide0008#csharp_style_var_for_built_in_types
csharp_style_var_for_built_in_types = false
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0007-ide0008#csharp_style_var_when_type_is_apparent
csharp_style_var_when_type_is_apparent = true
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0007-ide0008#csharp_style_var_elsewhere
csharp_style_var_elsewhere = false


# 4.1.9) Expression-bodied members
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/expression-bodied-members

# IDE0021: Use expression body for constructors - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0021
dotnet_diagnostic.IDE0021.severity = suggestion
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0021#csharp_style_expression_bodied_constructors
csharp_style_expression_bodied_constructors = false

# IDE0022: Use expression body for methods - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0022
dotnet_diagnostic.IDE0022.severity = suggestion
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0022#csharp_style_expression_bodied_methods
csharp_style_expression_bodied_methods = true

# IDE0023: Use expression body for conversion operators - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0023-ide0024
dotnet_diagnostic.IDE0023.severity = suggestion
# IDE0024: Use expression body for operators - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0023-ide0024
dotnet_diagnostic.IDE0024.severity = suggestion
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0023-ide0024#csharp_style_expression_bodied_operators
csharp_style_expression_bodied_operators = true

# IDE0025: Use expression body for properties - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0025
dotnet_diagnostic.IDE0025.severity = suggestion
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0025#csharp_style_expression_bodied_properties
csharp_style_expression_bodied_properties = true

# IDE0026: Use expression body for indexers - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0026
dotnet_diagnostic.IDE0026.severity = suggestion
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0026#csharp_style_expression_bodied_indexers
csharp_style_expression_bodied_indexers = true

# IDE0027: Use expression body for accessors - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0027
dotnet_diagnostic.IDE0027.severity = suggestion
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0027#csharp_style_expression_bodied_accessors
csharp_style_expression_bodied_accessors = true

# IDE0053: Use expression body for lambdas - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0053
dotnet_diagnostic.IDE0053.severity = suggestion
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0053#csharp_style_expression_bodied_lambdas
csharp_style_expression_bodied_lambdas = true

# IDE0061: Use expression body for local functions - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0061
dotnet_diagnostic.IDE0061.severity = suggestion
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0061#csharp_style_expression_bodied_local_functions
csharp_style_expression_bodied_local_functions = false


# 4.1.10) Pattern matching preferences
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/pattern-matching-preferences

# IDE0019: Use pattern matching to avoid as followed by a null check - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0019
dotnet_diagnostic.IDE0019.severity = suggestion
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0019#csharp_style_pattern_matching_over_as_with_null_check
csharp_style_pattern_matching_over_as_with_null_check = true

# IDE0020: Use pattern matching to avoid is check followed by a cast (with variable) - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0020-ide0038
dotnet_diagnostic.IDE0020.severity = suggestion
# IDE0038: Use pattern matching to avoid is check followed by a cast (without variable) - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0020-ide0038
dotnet_diagnostic.IDE0038.severity = suggestion
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0020-ide0038#csharp_style_pattern_matching_over_is_with_cast_check
csharp_style_pattern_matching_over_is_with_cast_check = true

# IDE0066: Use switch expression - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0066
dotnet_diagnostic.IDE0066.severity = suggestion
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0066#csharp_style_prefer_switch_expression
csharp_style_prefer_switch_expression = true

# IDE0078: Use pattern matching - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0078
dotnet_diagnostic.IDE0078.severity = suggestion
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0078#csharp_style_prefer_pattern_matching
csharp_style_prefer_pattern_matching = true

# IDE0083: Use pattern matching (not operator) - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0083
dotnet_diagnostic.IDE0083.severity = suggestion
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0083#csharp_style_prefer_not_pattern
csharp_style_prefer_not_pattern = true

# IDE0084: Use pattern matching (IsNot operator) - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0084
dotnet_diagnostic.IDE0084.severity = suggestion


# 4.1.11) Code block preferences
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/code-block-preferences

# IDE0011: Add braces - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0011
dotnet_diagnostic.IDE0011.severity = silent
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0011#csharp_prefer_braces
csharp_prefer_braces = false

# IDE0063: Use simple using statement - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0063
dotnet_diagnostic.IDE0063.severity = suggestion
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0063#csharp_prefer_simple_using_statement
csharp_prefer_simple_using_statement = false


# 4.1.12) using directive preferences

# IDE0065: using directive placement - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0065
dotnet_diagnostic.IDE0065.severity = suggestion
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0065#csharp_using_directive_placement
csharp_using_directive_placement = outside_namespace


# 4.1.13) File header preferences preferences

# IDE0073: Require file header - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0073
dotnet_diagnostic.IDE0073.severity = none
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0073#file_header_template
file_header_template = unset


##########################################
# 4.2) Unnecessary Code Rules
# https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/unnecessary-code-rules
##########################################

# IDE0001: Simplify name - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0001
dotnet_diagnostic.IDE0001.severity = suggestion

# IDE0002: Simplify member access - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0002
dotnet_diagnostic.IDE0002.severity = suggestion

# IDE0004: Remove unnecessary cast - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0004
dotnet_diagnostic.IDE0004.severity = suggestion

# IDE0005: Remove unnecessary import - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0005
dotnet_diagnostic.IDE0005.severity = suggestion

# IDE0035: Remove unreachable code - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0035
dotnet_diagnostic.IDE0035.severity = suggestion

# IDE0051: Remove unused private member - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0051
dotnet_diagnostic.IDE0051.severity = suggestion

# IDE0052: Remove unread private member - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0052
dotnet_diagnostic.IDE0052.severity = suggestion

# IDE0058: Remove unnecessary expression value - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0058
dotnet_diagnostic.IDE0058.severity = none
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0058#csharp_style_unused_value_expression_statement_preference
csharp_style_unused_value_expression_statement_preference = discard_variable

# IDE0059: Remove unnecessary value assignment - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0059
dotnet_diagnostic.IDE0059.severity = suggestion
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0059#csharp_style_unused_value_assignment_preference
csharp_style_unused_value_assignment_preference = discard_variable

# IDE0060: Remove unused parameter - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0060
dotnet_diagnostic.IDE0060.severity = suggestion
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0060#dotnet_code_quality_unused_parameters
dotnet_code_quality_unused_parameters = all

# IDE0079: Remove unnecessary suppression - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0079
dotnet_diagnostic.IDE0079.severity = suggestion
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0079#dotnet_remove_unnecessary_suppression_exclusions
dotnet_remove_unnecessary_suppression_exclusions = none

# IDE0080: Remove unnecessary suppression operator - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0080
dotnet_diagnostic.IDE0080.severity = suggestion

# IDE0100: Remove unnecessary equality operator - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0100
dotnet_diagnostic.IDE0100.severity = suggestion

# IDE0110: Remove unnecessary discard - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0110
dotnet_diagnostic.IDE0110.severity = suggestion

# IDE0140: Simplify object creation - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0140
dotnet_diagnostic.IDE0140.severity = suggestion


##########################################
# 4.3) Miscellaneous Rules
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/miscellaneous-rules
##########################################

# IDE0076: Remove invalid global SuppressMessageAttribute - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0076
dotnet_diagnostic.IDE0076.severity = suggestion

# IDE0077: Avoid legacy format target in global SuppressMessageAttribute - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0077
dotnet_diagnostic.IDE0077.severity = suggestion

##########################################
# 4.4) Formatting Rules
# https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/formatting-rules
##########################################

# IDE0055: Fix formatting - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/formatting-rules#rule-id-ide0055-fix-formatting
dotnet_diagnostic.IDE0055.severity = suggestion


# 4.4.1) Organize using directives

# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/dotnet-formatting-options#dotnet_sort_system_directives_first
dotnet_sort_system_directives_first = true

# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/dotnet-formatting-options#dotnet_separate_import_directive_groups
dotnet_separate_import_directive_groups = false


# 4.4.2) Namespace options

# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/dotnet-formatting-options#dotnet_style_namespace_match_folder
dotnet_style_namespace_match_folder = true


# 4.4.3) Newline options
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/csharp-formatting-options#new-line-options

# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/csharp-formatting-options#csharp_new_line_before_open_brace
csharp_new_line_before_open_brace = all

# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/csharp-formatting-options#csharp_new_line_before_else
csharp_new_line_before_else = true

# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/csharp-formatting-options#csharp_new_line_before_catch
csharp_new_line_before_catch = true

# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/csharp-formatting-options#csharp_new_line_before_finally
csharp_new_line_before_finally = true

# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/csharp-formatting-options#csharp_new_line_before_members_in_object_initializers
csharp_new_line_before_members_in_object_initializers = true

# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/csharp-formatting-options#csharp_new_line_before_members_in_anonymous_types
csharp_new_line_before_members_in_anonymous_types = true

# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/csharp-formatting-options#csharp_new_line_between_query_expression_clauses
csharp_new_line_between_query_expression_clauses = true


# 4.4.4) Indentation options
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/csharp-formatting-options#indentation-options

# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/csharp-formatting-options#csharp_indent_case_contents
csharp_indent_case_contents = true

# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/csharp-formatting-options#csharp_indent_switch_labels
csharp_indent_switch_labels = true

# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/csharp-formatting-options#csharp_indent_labels
csharp_indent_labels = no_change

# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/csharp-formatting-options#csharp_indent_block_contents
csharp_indent_block_contents = true

# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/csharp-formatting-options#csharp_indent_braces
csharp_indent_braces = false

# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/csharp-formatting-options#csharp_indent_case_contents_when_block
csharp_indent_case_contents_when_block = false


# 4.4.5) Spacing options
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/csharp-formatting-options#spacing-options

# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/csharp-formatting-options#csharp_space_after_cast
csharp_space_after_cast = false

# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/csharp-formatting-options#csharp_space_after_keywords_in_control_flow_statements
csharp_space_after_keywords_in_control_flow_statements = true

# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/csharp-formatting-options#csharp_space_between_parentheses
csharp_space_between_parentheses = false

# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/csharp-formatting-options#csharp_space_before_colon_in_inheritance_clause
csharp_space_before_colon_in_inheritance_clause = true

# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/csharp-formatting-options#csharp_space_after_colon_in_inheritance_clause
csharp_space_after_colon_in_inheritance_clause = true

# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/csharp-formatting-options#csharp_space_around_binary_operators
csharp_space_around_binary_operators = before_and_after

# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/csharp-formatting-options#csharp_space_between_method_declaration_parameter_list_parentheses
csharp_space_between_method_declaration_parameter_list_parentheses = false

# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/csharp-formatting-options#csharp_space_between_method_declaration_empty_parameter_list_parentheses
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false

# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/csharp-formatting-options#csharp_space_between_method_declaration_name_and_open_parenthesis
csharp_space_between_method_declaration_name_and_open_parenthesis = false

# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/csharp-formatting-options#csharp_space_between_method_call_parameter_list_parentheses
csharp_space_between_method_call_parameter_list_parentheses = false

# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/csharp-formatting-options#csharp_space_between_method_call_empty_parameter_list_parentheses
csharp_space_between_method_call_empty_parameter_list_parentheses = false

# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/csharp-formatting-options#csharp_space_between_method_call_name_and_opening_parenthesis
csharp_space_between_method_call_name_and_opening_parenthesis = false

# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/csharp-formatting-options#csharp_space_after_comma
csharp_space_after_comma = true

# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/csharp-formatting-options#csharp_space_before_comma
csharp_space_before_comma = false

# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/csharp-formatting-options#csharp_space_after_dot
csharp_space_after_dot = false

# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/csharp-formatting-options#csharp_space_before_dot
csharp_space_before_dot = false

# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/csharp-formatting-options#csharp_space_after_semicolon_in_for_statement
csharp_space_after_semicolon_in_for_statement = true

# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/csharp-formatting-options#csharp_space_before_semicolon_in_for_statement
csharp_space_before_semicolon_in_for_statement = false

# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/csharp-formatting-options#csharp_space_around_declaration_statements
csharp_space_around_declaration_statements = false

# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/csharp-formatting-options#csharp_space_before_open_square_brackets
csharp_space_before_open_square_brackets = false

# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/csharp-formatting-options#csharp_space_between_empty_square_brackets
csharp_space_between_empty_square_brackets = false

# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/csharp-formatting-options#csharp_space_between_square_brackets
csharp_space_between_square_brackets = false

# 4.4.6) Wrap options
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/csharp-formatting-options#wrap-options

# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/csharp-formatting-options#csharp_preserve_single_line_statements
csharp_preserve_single_line_statements = false

# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/csharp-formatting-options#csharp_preserve_single_line_blocks
csharp_preserve_single_line_blocks = true


# 4.4.7) Undocumented rule severities

# IDE0043: Format string contains invalid placeholder
dotnet_diagnostic.IDE0043.severity = suggestion

# IDE0120: Simplyfy LINQ expression
dotnet_diagnostic.IDE0120.severity = suggestion

# IDE0180: Use tuple to swap values
dotnet_diagnostic.IDE0180.severity = suggestion

# IDE2000: Avoid multiple blank lines
dotnet_diagnostic.IDE2000.severity = suggestion

# IDE2001: Embedded statements must be on their own line
dotnet_diagnostic.IDE2001.severity = suggestion

# IDE2002: Consecutive braces must not have blank lines between them
dotnet_diagnostic.IDE2002.severity = suggestion

# IDE2003: Blank line required between block and subsequent statement
dotnet_diagnostic.IDE2003.severity = suggestion


##########################################
# 4.5) Naming Rules
# https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/naming-rules
##########################################

# IDE1006: Naming rule violation - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/naming-rules#rule-id-ide1006-naming-rule-violation
dotnet_diagnostic.IDE1006.severity = suggestion

# 4.5.1) Types and namespaces
dotnet_naming_rule.types_and_namespaces_rule.style = types_and_namespaces_rule_style
dotnet_naming_rule.types_and_namespaces_rule.symbols = types_and_namespaces_rule_symbols
dotnet_naming_rule.types_and_namespaces_rule.severity = suggestion
dotnet_naming_symbols.types_and_namespaces_rule_symbols.applicable_accessibilities = *
dotnet_naming_symbols.types_and_namespaces_rule_symbols.applicable_kinds = namespace, class, struct, enum, delegate
dotnet_naming_style.types_and_namespaces_rule_style.capitalization = pascal_case

# 4.5.2) Interfaces
dotnet_naming_rule.interfaces_rule.style = interfaces_rule_style
dotnet_naming_rule.interfaces_rule.symbols = interfaces_rule_symbols
dotnet_naming_rule.interfaces_rule.severity = suggestion
dotnet_naming_symbols.interfaces_rule_symbols.applicable_accessibilities = *
dotnet_naming_symbols.interfaces_rule_symbols.applicable_kinds = interface
dotnet_naming_style.interfaces_rule_style.capitalization = pascal_case
dotnet_naming_style.interfaces_rule_style.required_prefix = I

# 4.5.3) Type parameters
dotnet_naming_rule.type_parameters_rule.style = type_parameters_rule_style
dotnet_naming_rule.type_parameters_rule.symbols = type_parameters_rule_symbols
dotnet_naming_rule.type_parameters_rule.severity = suggestion
dotnet_naming_symbols.type_parameters_rule_symbols.applicable_accessibilities = *
dotnet_naming_symbols.type_parameters_rule_symbols.applicable_kinds = type_parameter
dotnet_naming_style.type_parameters_rule_style.capitalization = pascal_case
dotnet_naming_style.type_parameters_rule_style.required_prefix = T

# 4.5.4) Methods
dotnet_naming_rule.methods_rule.style = methods_rule_style
dotnet_naming_rule.methods_rule.symbols = methods_rule_symbols
dotnet_naming_rule.methods_rule.severity = suggestion
dotnet_naming_symbols.methods_rule_symbols.applicable_accessibilities = *
dotnet_naming_symbols.methods_rule_symbols.applicable_kinds = method
dotnet_naming_style.methods_rule_style.capitalization = pascal_case

# 4.5.5) Properties
dotnet_naming_rule.properties_rule.style = properties_rule_style
dotnet_naming_rule.properties_rule.symbols = properties_rule_symbols
dotnet_naming_rule.properties_rule.severity = suggestion
dotnet_naming_symbols.properties_rule_symbols.applicable_accessibilities = *
dotnet_naming_symbols.properties_rule_symbols.applicable_kinds = property
dotnet_naming_style.properties_rule_style.capitalization = pascal_case

# 4.5.6) Events
dotnet_naming_rule.events_rule.style = events_rule_style
dotnet_naming_rule.events_rule.symbols = events_rule_symbols
dotnet_naming_rule.events_rule.severity = suggestion
dotnet_naming_symbols.events_rule_symbols.applicable_accessibilities = *
dotnet_naming_symbols.events_rule_symbols.applicable_kinds = event
dotnet_naming_style.events_rule_style.capitalization = pascal_case

# 4.5.7) Local variables
dotnet_naming_rule.local_variables_rule.style = local_variables_rule_style
dotnet_naming_rule.local_variables_rule.symbols = local_variables_rule_symbols
dotnet_naming_rule.local_variables_rule.severity = suggestion
dotnet_naming_symbols.local_variables_rule_symbols.applicable_accessibilities = *
dotnet_naming_symbols.local_variables_rule_symbols.applicable_kinds = local
dotnet_naming_style.local_variables_rule_style.capitalization = camel_case

# 4.5.8) Local constants
dotnet_naming_rule.local_constants_rule.style = local_constants_rule_style
dotnet_naming_rule.local_constants_rule.symbols = local_constants_rule_symbols
dotnet_naming_rule.local_constants_rule.severity = suggestion
dotnet_naming_symbols.local_constants_rule_symbols.applicable_accessibilities = *
dotnet_naming_symbols.local_constants_rule_symbols.applicable_kinds = local
dotnet_naming_symbols.local_constants_rule_symbols.required_modifiers = const
dotnet_naming_style.local_constants_rule_style.capitalization = camel_case

# 4.5.9) Parameters
dotnet_naming_rule.parameters_rule.style = parameters_rule_style
dotnet_naming_rule.parameters_rule.symbols = parameters_rule_symbols
dotnet_naming_rule.parameters_rule.severity = suggestion
dotnet_naming_symbols.parameters_rule_symbols.applicable_accessibilities = *
dotnet_naming_symbols.parameters_rule_symbols.applicable_kinds = parameter
dotnet_naming_style.parameters_rule_style.capitalization = camel_case

# 4.5.10) Non-private instance fields
dotnet_naming_rule.non_private_fields_rule.style = non_private_fields_rule_style
dotnet_naming_rule.non_private_fields_rule.symbols = non_private_fields_rule_symbols
dotnet_naming_rule.non_private_fields_rule.severity = suggestion
dotnet_naming_symbols.non_private_fields_rule_symbols.applicable_accessibilities = public, internal, protected, protected_internal, private_protected
dotnet_naming_symbols.non_private_fields_rule_symbols.applicable_kinds = field
dotnet_naming_style.non_private_fields_rule_style.capitalization = pascal_case

# 4.5.11) Private instance fields
dotnet_naming_rule.private_instance_fields_rule.style = private_instance_fields_rule_style
dotnet_naming_rule.private_instance_fields_rule.symbols = private_instance_fields_rule_symbols
dotnet_naming_rule.private_instance_fields_rule.severity = suggestion
dotnet_naming_symbols.private_instance_fields_rule_symbols.applicable_accessibilities = private
dotnet_naming_symbols.private_instance_fields_rule_symbols.applicable_kinds = field
dotnet_naming_style.private_instance_fields_rule_style.capitalization = camel_case
dotnet_naming_style.private_instance_fields_rule_style.required_prefix = _

# 4.5.12) Private static fields
dotnet_naming_rule.private_static_fields_rule.style = private_static_fields_rule_style
dotnet_naming_rule.private_static_fields_rule.symbols = private_static_fields_rule_symbols
dotnet_naming_rule.private_static_fields_rule.severity = suggestion
dotnet_naming_symbols.private_static_fields_rule_symbols.applicable_accessibilities = private
dotnet_naming_symbols.private_static_fields_rule_symbols.applicable_kinds = field
dotnet_naming_symbols.private_static_fields_rule_symbols.required_modifiers = static
dotnet_naming_style.private_static_fields_rule_style.capitalization = camel_case
dotnet_naming_style.private_static_fields_rule_style.required_prefix = _

# 4.5.13) Non-private constant fields
dotnet_naming_rule.non_private_constant_fields_rule.style = non_private_constant_fields_rule_style
dotnet_naming_rule.non_private_constant_fields_rule.symbols = non_private_constant_fields_rule_symbols
dotnet_naming_rule.non_private_constant_fields_rule.severity = suggestion
dotnet_naming_symbols.non_private_constant_fields_rule_symbols.applicable_accessibilities = public, internal, protected, protected_internal, private_protected
dotnet_naming_symbols.non_private_constant_fields_rule_symbols.applicable_kinds = field
dotnet_naming_symbols.non_private_constant_fields_rule_symbols.required_modifiers = const
dotnet_naming_style.non_private_constant_fields_rule_style.capitalization = pascal_case

# 4.5.14) Private constant fields
dotnet_naming_rule.private_constant_fields_rule.style = private_constant_fields_rule_style
dotnet_naming_rule.private_constant_fields_rule.symbols = private_constant_fields_rule_symbols
dotnet_naming_rule.private_constant_fields_rule.severity = suggestion
dotnet_naming_symbols.private_constant_fields_rule_symbols.applicable_accessibilities = private
dotnet_naming_symbols.private_constant_fields_rule_symbols.applicable_kinds = field
dotnet_naming_symbols.private_constant_fields_rule_symbols.required_modifiers = const
dotnet_naming_style.private_constant_fields_rule_style.capitalization = pascal_case

# 4.5.15) Non-private static readonly fields
dotnet_naming_rule.non_private_static_readonly_fields_rule.style = non_private_static_readonly_fields_rule_style
dotnet_naming_rule.non_private_static_readonly_fields_rule.symbols = non_private_static_readonly_fields_rule_symbols
dotnet_naming_rule.non_private_static_readonly_fields_rule.severity = suggestion
dotnet_naming_symbols.non_private_static_readonly_fields_rule_symbols.applicable_accessibilities = public, internal, protected, protected_internal, private_protected
dotnet_naming_symbols.non_private_static_readonly_fields_rule_symbols.applicable_kinds = field
dotnet_naming_symbols.non_private_static_readonly_fields_rule_symbols.required_modifiers = static, readonly
dotnet_naming_style.non_private_static_readonly_fields_rule_style.capitalization = pascal_case

# 4.5.16) Private static readonly fields
dotnet_naming_rule.private_static_readonly_fields_rule.style = private_static_readonly_fields_rule_style
dotnet_naming_rule.private_static_readonly_fields_rule.symbols = private_static_readonly_fields_rule_symbols
dotnet_naming_rule.private_static_readonly_fields_rule.severity = suggestion
dotnet_naming_symbols.private_static_readonly_fields_rule_symbols.applicable_accessibilities = private
dotnet_naming_symbols.private_static_readonly_fields_rule_symbols.applicable_kinds = field
dotnet_naming_symbols.private_static_readonly_fields_rule_symbols.required_modifiers = static, readonly
dotnet_naming_style.private_static_readonly_fields_rule_style.capitalization = pascal_case

# 4.5.17) Local functions
dotnet_naming_rule.local_functions_rule.style = local_functions_rule_style
dotnet_naming_rule.local_functions_rule.symbols = local_functions_rule_symbols
dotnet_naming_rule.local_functions_rule.severity = suggestion
dotnet_naming_symbols.local_functions_rule_symbols.applicable_accessibilities = *
dotnet_naming_symbols.local_functions_rule_symbols.applicable_kinds = local_function
dotnet_naming_style.local_functions_rule_style.capitalization = pascal_case


####################################################################################
#
# 5) .NET Code Quality Rules
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/
#
####################################################################################
[*.{cs,csx,cake,vb,vbx}]

# Default severity level for IDE0051, IDE0064, IDE0076
dotnet_analyzer_diagnostic.category-CodeQuality.severity = suggestion


##########################################
# 5.1) Design Rules
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/design-warnings
##########################################

# Default severity level of Design rules - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/design-warnings
dotnet_analyzer_diagnostic.category-Design.severity = suggestion

# CA1000: Do not declare static members on generic types - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1000
dotnet_diagnostic.CA1000.severity = suggestion

# CA1001: Types that own disposable fields should be disposable - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1001
dotnet_diagnostic.CA1001.severity = suggestion

# CA1002: Do not expose generic lists - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1002
dotnet_diagnostic.CA1002.severity = suggestion

# CA1003: Use generic event handler instances - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1003
dotnet_diagnostic.CA1003.severity = suggestion

# CA1005: Avoid excessive parameters on generic types - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1005
dotnet_diagnostic.CA1005.severity = suggestion

# CA1008: Enums should have zero value - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1008
dotnet_diagnostic.CA1008.severity = suggestion

# CA1010: Collections should implement generic interface - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1010
dotnet_diagnostic.CA1010.severity = suggestion

# CA1012: Abstract types should not have public constructors - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1012
dotnet_diagnostic.CA1012.severity = suggestion

# CA1014: Mark assemblies with CLSCompliantAttribute - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1014
dotnet_diagnostic.CA1014.severity = suggestion

# CA1016: Mark assemblies with AssemblyVersionAttribute - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1016
dotnet_diagnostic.CA1016.severity = suggestion

# CA1017: Mark assemblies with ComVisibleAttribute - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1017
dotnet_diagnostic.CA1017.severity = suggestion

# CA1018: Mark attributes with AttributeUsageAttribute - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1018
dotnet_diagnostic.CA1018.severity = suggestion

# CA1019: Define accessors for attribute arguments - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1019
dotnet_diagnostic.CA1019.severity = suggestion

# CA1021: Avoid out parameters - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1021
dotnet_diagnostic.CA1021.severity = suggestion

# CA1024: Use properties where appropriate - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1024
dotnet_diagnostic.CA1024.severity = suggestion

# CA1027: Mark enums with FlagsAttribute - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1027
dotnet_diagnostic.CA1027.severity = suggestion

# CA1028: Enum storage should be Int32 - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1028
dotnet_diagnostic.CA1028.severity = suggestion

# CA1030: Use events where appropriate - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1030
dotnet_diagnostic.CA1030.severity = suggestion

# CA1031: Do not catch general exception types - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1031
dotnet_diagnostic.CA1031.severity = suggestion

# CA1032: Implement standard exception constructors - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1032
dotnet_diagnostic.CA1032.severity = suggestion

# CA1033: Interface methods should be callable by child types - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1033
dotnet_diagnostic.CA1033.severity = suggestion

# CA1034: Nested types should not be visible - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1034
dotnet_diagnostic.CA1034.severity = suggestion

# CA1036: Override methods on comparable types - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1036
dotnet_diagnostic.CA1036.severity = suggestion

# CA1040: Avoid empty interfaces - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1040
dotnet_diagnostic.CA1040.severity = suggestion

# CA1041: Provide ObsoleteAttribute message - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1041
dotnet_diagnostic.CA1041.severity = suggestion

# CA1043: Use integral or string argument for indexers - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1043
dotnet_diagnostic.CA1043.severity = suggestion

# CA1044: Properties should not be write only - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1044
dotnet_diagnostic.CA1044.severity = suggestion

# CA1045: Do not pass types by reference - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1045
dotnet_diagnostic.CA1045.severity = suggestion

# CA1046: Do not overload operator equals on reference types - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1046
dotnet_diagnostic.CA1046.severity = suggestion

# CA1047: Do not declare protected members in sealed types - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1047
dotnet_diagnostic.CA1047.severity = suggestion

# CA1050: Declare types in namespaces - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1050
dotnet_diagnostic.CA1050.severity = suggestion

# CA1051: Do not declare visible instance fields - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1051
dotnet_diagnostic.CA1051.severity = suggestion

# CA1052: Static holder types should be Static or NotInheritable - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1052
dotnet_diagnostic.CA1052.severity = suggestion

# CA1053: Static holder types should not have default constructors - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1053
dotnet_diagnostic.CA1053.severity = suggestion

# CA1054: URI parameters should not be strings - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1054
dotnet_diagnostic.CA1054.severity = suggestion

# CA1055: URI return values should not be strings - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1055
dotnet_diagnostic.CA1055.severity = suggestion

# CA1056: URI properties should not be strings - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1056
dotnet_diagnostic.CA1056.severity = suggestion

# CA1058: Types should not extend certain base types - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1058
dotnet_diagnostic.CA1058.severity = suggestion

# CA1060: Move P/Invokes to NativeMethods class - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1060
dotnet_diagnostic.CA1060.severity = suggestion

# CA1061: Do not hide base class methods - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1061
dotnet_diagnostic.CA1061.severity = suggestion

# CA1062: Validate arguments of public methods - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1062
dotnet_diagnostic.CA1062.severity = suggestion

# CA1063: Implement IDisposable correctly - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1063
dotnet_diagnostic.CA1063.severity = suggestion

# CA1064: Exceptions should be public - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1064
dotnet_diagnostic.CA1064.severity = suggestion

# CA1065: Do not raise exceptions in unexpected locations - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1065
dotnet_diagnostic.CA1065.severity = suggestion

# CA1066: Implement IEquatable when overriding Equals - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1066
dotnet_diagnostic.CA1066.severity = suggestion

# CA1067: Override Equals when implementing IEquatable - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1067
dotnet_diagnostic.CA1067.severity = suggestion

# CA1068: CancellationToken parameters must come last - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1068
dotnet_diagnostic.CA1068.severity = suggestion

# CA1069: Enums should not have duplicate values - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1069
dotnet_diagnostic.CA1069.severity = suggestion

# CA1070: Do not declare event fields as virtual - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1070
dotnet_diagnostic.CA1070.severity = suggestion


##########################################
# 5.2) Documentation Rules
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/documentation-warnings
##########################################

# Default severity level of Documentation rules - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/documentation-warnings
dotnet_analyzer_diagnostic.category-Documentation.severity = suggestion

# CA1200: Avoid using cref tags with a prefix - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1200
dotnet_diagnostic.CA1200.severity = suggestion


##########################################
# 5.3) Globalization Rules
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/globalization-warnings
##########################################

# Default severity level of Globalization rules - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/globalization-warnings
dotnet_analyzer_diagnostic.category-Globalization.severity = suggestion

# CA1303: Do not pass literals as localized parameters - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1303
dotnet_diagnostic.CA1303.severity = suggestion

# CA1304: Specify CultureInfo - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1304
dotnet_diagnostic.CA1304.severity = suggestion

# CA1305: Specify IFormatProvider - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1305
dotnet_diagnostic.CA1305.severity = suggestion

# CA1307: Specify StringComparison for clarity - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1307
dotnet_diagnostic.CA1307.severity = suggestion

# CA1308: Normalize strings to uppercase - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1308
dotnet_diagnostic.CA1308.severity = suggestion

# CA1309: Use ordinal StringComparison - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1309
dotnet_diagnostic.CA1309.severity = suggestion

# CA1310: Specify StringComparison for correctness - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1310
dotnet_diagnostic.CA1310.severity = suggestion

# CA2101: Specify marshalling for P/Invoke string arguments - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2101
dotnet_diagnostic.CA2101.severity = suggestion


##########################################
# 5.4) Portability and Interoperability Rules
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/interoperability-warnings
##########################################

# Default severity level of Interoperability rules - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/interoperability-warnings
dotnet_analyzer_diagnostic.category-Interoperability.severity = suggestion

# CA1401: P/Invokes should not be visible - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1401
dotnet_diagnostic.CA1401.severity = suggestion

# CA1416: Validate platform compatibility - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1416
dotnet_diagnostic.CA1416.severity = suggestion

# CA1417: Do not use OutAttribute on string parameters for P/Invokes - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1417
dotnet_diagnostic.CA1417.severity = suggestion

# CA1418: Validate platform compatibility - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1418
dotnet_diagnostic.CA1418.severity = suggestion

# CA1419: Provide a parameterless constructor that is as visible as the containing type for concrete types derived from 'System.Runtime.InteropServices.SafeHandle' - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1419
dotnet_diagnostic.CA1419.severity = suggestion


##########################################
# 5.5) Maintainability Rules
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/maintainability-warnings
##########################################

# Default severity level of Maintainability rules - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/maintainability-warnings
dotnet_analyzer_diagnostic.category-Maintainability.severity = suggestion

# CA1501: Avoid excessive inheritance - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1501
dotnet_diagnostic.CA1501.severity = suggestion

# CA1502: Avoid excessive complexity - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1502
dotnet_diagnostic.CA1502.severity = suggestion

# CA1505: Avoid unmaintainable code - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1505
dotnet_diagnostic.CA1505.severity = suggestion

# CA1506: Avoid excessive class coupling - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1506
dotnet_diagnostic.CA1506.severity = suggestion

# CA1507: Use nameof in place of string - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1507
dotnet_diagnostic.CA1507.severity = suggestion

# CA1508: Avoid dead conditional code - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1508
dotnet_diagnostic.CA1508.severity = suggestion

# CA1509: Invalid entry in code metrics configuration file - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1509
dotnet_diagnostic.CA1509.severity = suggestion


##########################################
# 5.6) Naming Rules
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/naming-warnings
##########################################

# Default severity level of Naming rules - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/naming-warnings
dotnet_analyzer_diagnostic.category-Naming.severity = suggestion

# CA1700: Do not name enum values 'Reserved' - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1700
dotnet_diagnostic.CA1700.severity = suggestion

# CA1707: Identifiers should not contain underscores - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1707
dotnet_diagnostic.CA1707.severity = suggestion

# CA1708: Identifiers should differ by more than case - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1708
dotnet_diagnostic.CA1708.severity = suggestion

# CA1710: Identifiers should have correct suffix - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1710
dotnet_diagnostic.CA1710.severity = suggestion

# CA1711: Identifiers should not have incorrect suffix - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1711
dotnet_diagnostic.CA1711.severity = suggestion

# CA1712: Do not prefix enum values with type name - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1712
dotnet_diagnostic.CA1712.severity = suggestion

# CA1713: Events should not have before or after prefix - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1713
dotnet_diagnostic.CA1713.severity = suggestion

# CA1714: Flags enums should have plural names - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1714
dotnet_diagnostic.CA1714.severity = suggestion

# CA1715: Identifiers should have correct prefix - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1715
dotnet_diagnostic.CA1715.severity = suggestion

# CA1716: Identifiers should not match keywords - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1716
dotnet_diagnostic.CA1716.severity = suggestion

# CA1717: Only FlagsAttribute enums should have plural names - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1717
dotnet_diagnostic.CA1717.severity = suggestion

# CA1720: Identifiers should not contain type names - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1720
dotnet_diagnostic.CA1720.severity = suggestion

# CA1721: Property names should not match get methods - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1721
dotnet_diagnostic.CA1721.severity = suggestion

# CA1724: Type names should not match namespaces - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1724
dotnet_diagnostic.CA1724.severity = suggestion

# CA1725: Parameter names should match base declaration - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1725
dotnet_diagnostic.CA1725.severity = suggestion

# CA1727: Use PascalCase for named placeholders - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1727
dotnet_diagnostic.CA1727.severity = suggestion


##########################################
# 5.7) Performance Rules
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/performance-warnings
##########################################

# Default severity level of Performance rules - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/performance-warnings
dotnet_analyzer_diagnostic.category-Performance.severity = suggestion

# CA1802: Use Literals Where Appropriate - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1802
dotnet_diagnostic.CA1802.severity = suggestion

# CA1805: Do not initialize unnecessarily - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1805
dotnet_diagnostic.CA1805.severity = suggestion

# CA1806: Do not ignore method results - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1806
dotnet_diagnostic.CA1806.severity = suggestion

# CA1810: Initialize reference type static fields inline - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1810
dotnet_diagnostic.CA1810.severity = suggestion

# CA1812: Avoid uninstantiated internal classes - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1812
dotnet_diagnostic.CA1812.severity = suggestion

# CA1813: Avoid unsealed attributes - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1813
dotnet_diagnostic.CA1813.severity = suggestion

# CA1814: Prefer jagged arrays over multidimensional - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1814
dotnet_diagnostic.CA1814.severity = suggestion

# CA1815: Override equals and operator equals on value types - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1815
dotnet_diagnostic.CA1815.severity = suggestion

# CA1819: Properties should not return arrays - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1819
dotnet_diagnostic.CA1819.severity = suggestion

# CA1820: Test for empty strings using string length - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1820
dotnet_diagnostic.CA1820.severity = suggestion

# CA1821: Remove empty finalizers - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1821
dotnet_diagnostic.CA1821.severity = suggestion

# CA1822: Mark members as static - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1822
dotnet_diagnostic.CA1822.severity = suggestion

# CA1823: Avoid unused private fields - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1823
dotnet_diagnostic.CA1823.severity = suggestion

# CA1824: Mark assemblies with NeutralResourcesLanguageAttribute - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1824
dotnet_diagnostic.CA1824.severity = suggestion

# CA1825: Avoid zero-length array allocations - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1825
dotnet_diagnostic.CA1825.severity = suggestion

# CA1826: Use property instead of Linq Enumerable method - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1826
dotnet_diagnostic.CA1826.severity = suggestion

# CA1827: Do not use Count/LongCount when Any can be used - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1827
dotnet_diagnostic.CA1827.severity = suggestion

# CA1828: Do not use CountAsync/LongCountAsync when AnyAsync can be used - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1828
dotnet_diagnostic.CA1828.severity = suggestion

# CA1829: Use Length/Count property instead of Enumerable.Count method - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1829
dotnet_diagnostic.CA1829.severity = suggestion

# CA1830: Prefer strongly-typed Append and Insert method overloads on StringBuilder - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1830
dotnet_diagnostic.CA1830.severity = suggestion

# CA1831: Use AsSpan instead of Range-based indexers for string when appropriate - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1831
dotnet_diagnostic.CA1831.severity = suggestion

# CA1832: Use AsSpan or AsMemory instead of Range-based indexers for getting ReadOnlySpan or ReadOnlyMemory portion of an array - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1832
dotnet_diagnostic.CA1832.severity = suggestion

# CA1833: Use AsSpan or AsMemory instead of Range-based indexers for getting Span or Memory portion of an array - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1833
dotnet_diagnostic.CA1833.severity = suggestion

# CA1834: Use StringBuilder.Append(char) for single character strings - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1834
dotnet_diagnostic.CA1834.severity = suggestion

# CA1835: Prefer the memory-based overloads of ReadAsync/WriteAsync methods in stream-based classes - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1835
dotnet_diagnostic.CA1835.severity = suggestion

# CA1836: Prefer IsEmpty over Count when available - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1836
dotnet_diagnostic.CA1836.severity = suggestion

# CA1837: Use Environment.ProcessId instead of Process.GetCurrentProcess().Id - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1837
dotnet_diagnostic.CA1837.severity = suggestion

# CA1838: Avoid StringBuilder parameters for P/Invokes - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1838
dotnet_diagnostic.CA1838.severity = suggestion

# CA1839: Use Environment.ProcessPath instead of Process.GetCurrentProcess().MainModule.FileName - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1839
dotnet_diagnostic.CA1839.severity = suggestion

# CA1840: Use Environment.CurrentManagedThreadId instead of Thread.CurrentThread.ManagedThreadId - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1840
dotnet_diagnostic.CA1840.severity = suggestion

# CA1841: Prefer Dictionary Contains methods - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1841
dotnet_diagnostic.CA1841.severity = suggestion

# CA1842: Do not use 'WhenAll' with a single task - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1842
dotnet_diagnostic.CA1842.severity = suggestion

# CA1843: Do not use 'WaitAll' with a single task - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1843
dotnet_diagnostic.CA1843.severity = suggestion

# CA1844: Provide memory-based overrides of async methods when subclassing 'Stream' - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1844
dotnet_diagnostic.CA1844.severity = suggestion

# CA1845: Use span-based 'string.Concat' - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1845
dotnet_diagnostic.CA1845.severity = suggestion

# CA1846: Prefer AsSpan over Substring - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1846
dotnet_diagnostic.CA1846.severity = suggestion

# CA1847: Use string.Contains(char) instead of string.Contains(string) with single characters - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1847
dotnet_diagnostic.CA1847.severity = suggestion

# CA1848: Use the LoggerMessage delegates - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1848
dotnet_diagnostic.CA1848.severity = suggestion

# CA1849: Call async methods when in an async method - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1849
dotnet_diagnostic.CA1849.severity = suggestion

# CA1850: Prefer static HashData method over ComputeHash - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1850
dotnet_diagnostic.CA1850.severity = suggestion

# CA1851: Possible multiple enumerations of IEnumerable collection - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1851
dotnet_diagnostic.CA1851.severity = suggestion


##########################################
# 5.8) SingleFile Rules
# https://docs.microsoft.com/en-us/dotnet/core/deploying/single-file/warnings/overview
##########################################

# Default severity level of SingleFile rules - https://docs.microsoft.com/en-us/dotnet/core/deploying/single-file/warnings/overview
dotnet_analyzer_diagnostic.category-SingleFile.severity = suggestion

# IL3000: Avoid accessing Assembly file path when publishing as a single file - https://docs.microsoft.com/en-us/dotnet/core/deploying/single-file/warnings/il3000
dotnet_diagnostic.IL3000.severity = suggestion

# IL3001: Avoid accessing Assembly file path when publishing as a single file - https://docs.microsoft.com/en-us/dotnet/core/deploying/single-file/warnings/il3001
dotnet_diagnostic.IL3001.severity = suggestion

# IL3002: Avoid calling members annotated with 'RequiresAssemblyFilesAttribute' when publishing as a single file - https://docs.microsoft.com/en-us/dotnet/core/deploying/single-file/warnings/il3002
dotnet_diagnostic.IL3002.severity = suggestion

# IL3003: 'RequiresAssemblyFilesAttribute' annotations must match across all interface implementations or overrides - https://docs.microsoft.com/en-us/dotnet/core/deploying/single-file/warnings/il3003
dotnet_diagnostic.IL3003.severity = suggestion


##########################################
# 5.9) Reliability Rules
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/reliability-warnings
##########################################

# Default severity level of Reliability rules - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/reliability-warnings
dotnet_analyzer_diagnostic.category-Reliability.severity = suggestion

# CA2000: Dispose objects before losing scope - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2000
dotnet_diagnostic.CA2000.severity = suggestion

# CA2002: Do not lock on objects with weak identity - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2002
dotnet_diagnostic.CA2002.severity = suggestion

# CA2007: Do not directly await a Task - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2007
dotnet_diagnostic.CA2007.severity = suggestion

# CA2008: Do not create tasks without passing a TaskScheduler - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2008
dotnet_diagnostic.CA2008.severity = suggestion

# CA2009: Do not call ToImmutableCollection on an ImmutableCollection value - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2009
dotnet_diagnostic.CA2009.severity = suggestion

# CA2011: Do not assign property within its setter - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2011
dotnet_diagnostic.CA2011.severity = suggestion

# CA2012: Use ValueTasks correctly - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2012
dotnet_diagnostic.CA2012.severity = suggestion

# CA2013: Do not use ReferenceEquals with value types - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2013
dotnet_diagnostic.CA2013.severity = suggestion

# CA2014: Do not use stackalloc in loops - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2014
dotnet_diagnostic.CA2014.severity = suggestion

# CA2015: Do not define finalizers for types derived from MemoryManager<T> - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2015
dotnet_diagnostic.CA2015.severity = suggestion

# CA2016: Forward the CancellationToken parameter to methods that take one - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2016
dotnet_diagnostic.CA2016.severity = suggestion

# CA2017: Parameter count mismatch - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2017
dotnet_diagnostic.CA2017.severity = suggestion

# CA2018: The count argument to Buffer.BlockCopy should specify the number of bytes to copy - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2018
dotnet_diagnostic.CA2018.severity = suggestion


##########################################
# 5.10) Security Rules
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/security-warnings
##########################################

# Default severity level of Security rules - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/security-warnings
dotnet_analyzer_diagnostic.category-Security.severity = suggestion

# CA2100: Review SQL queries for security vulnerabilities - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2100
dotnet_diagnostic.CA2100.severity = suggestion

# CA2109: Review visible event handlers - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2109
dotnet_diagnostic.CA2109.severity = suggestion

# CA2119: Seal methods that satisfy private interfaces - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2119
dotnet_diagnostic.CA2119.severity = suggestion

# CA2153: Avoid handling Corrupted State Exceptions - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2153
dotnet_diagnostic.CA2153.severity = suggestion

# CA2300: Do not use insecure deserializer BinaryFormatter - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2300
dotnet_diagnostic.CA2300.severity = suggestion

# CA2301: Do not call BinaryFormatter.Deserialize without first setting BinaryFormatter.Binder - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2301
dotnet_diagnostic.CA2301.severity = suggestion

# CA2302: Ensure BinaryFormatter.Binder is set before calling BinaryFormatter.Deserialize - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2302
dotnet_diagnostic.CA2302.severity = suggestion

# CA2305: Do not use insecure deserializer LosFormatter - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2305
dotnet_diagnostic.CA2305.severity = suggestion

# CA2310: Do not use insecure deserializer NetDataContractSerializer - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2310
dotnet_diagnostic.CA2310.severity = suggestion

# CA2311: Do not deserialize without first setting NetDataContractSerializer.Binder - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2311
dotnet_diagnostic.CA2311.severity = suggestion

# CA2312: Ensure NetDataContractSerializer.Binder is set before deserializing - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2312
dotnet_diagnostic.CA2312.severity = suggestion

# CA2315: Do not use insecure deserializer ObjectStateFormatter - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2315
dotnet_diagnostic.CA2315.severity = suggestion

# CA2321: Do not deserialize with JavaScriptSerializer using a SimpleTypeResolver - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2321
dotnet_diagnostic.CA2321.severity = suggestion

# CA2322: Ensure JavaScriptSerializer is not initialized with SimpleTypeResolver before deserializing - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2322
dotnet_diagnostic.CA2322.severity = suggestion

# CA2326: Do not use TypeNameHandling values other than None - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2326
dotnet_diagnostic.CA2326.severity = suggestion

# CA2327: Do not use insecure JsonSerializerSettings - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2327
dotnet_diagnostic.CA2327.severity = suggestion

# CA2328: Ensure that JsonSerializerSettings are secure - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2328
dotnet_diagnostic.CA2328.severity = suggestion

# CA2329: Do not deserialize with JsonSerializer using an insecure configuration - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2329
dotnet_diagnostic.CA2329.severity = suggestion

# CA2330: Ensure that JsonSerializer has a secure configuration when deserializing - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2330
dotnet_diagnostic.CA2330.severity = suggestion

# CA2350: Ensure DataTable.ReadXml()'s input is trusted - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2350
dotnet_diagnostic.CA2350.severity = suggestion

# CA2351: Ensure DataSet.ReadXml()'s input is trusted - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2351
dotnet_diagnostic.CA2351.severity = suggestion

# CA2352: Unsafe DataSet or DataTable in serializable type can be vulnerable to remote code execution attacks - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2352
dotnet_diagnostic.CA2352.severity = suggestion

# CA2353: Unsafe DataSet or DataTable in serializable type - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2353
dotnet_diagnostic.CA2353.severity = suggestion

# CA2354: Unsafe DataSet or DataTable in deserialized object graph can be vulnerable to remote code execution attack - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2354
dotnet_diagnostic.CA2354.severity = suggestion

# CA2355: Unsafe DataSet or DataTable in deserialized object graph - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2355
dotnet_diagnostic.CA2355.severity = suggestion

# CA2356: Unsafe DataSet or DataTable type in web deserialized object graph - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2356
dotnet_diagnostic.CA2356.severity = suggestion

# CA2361: Ensure autogenerated class containing DataSet.ReadXml() is not used with untrusted data - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2361
dotnet_diagnostic.CA2361.severity = suggestion

# CA2362: Unsafe DataSet or DataTable in autogenerated serializable type can be vulnerable to remote code execution attacks - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2362
dotnet_diagnostic.CA2362.severity = suggestion

# CA3001: Review code for SQL injection vulnerabilities - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca3001
dotnet_diagnostic.CA3001.severity = suggestion

# CA3002: Review code for XSS vulnerabilities - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca3002
dotnet_diagnostic.CA3002.severity = suggestion

# CA3003: Review code for file path injection vulnerabilities - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca3003
dotnet_diagnostic.CA3003.severity = suggestion

# CA3004: Review code for information disclosure vulnerabilities - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca3004
dotnet_diagnostic.CA3004.severity = suggestion

# CA3005: Review code for LDAP injection vulnerabilities - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca3005
dotnet_diagnostic.CA3005.severity = suggestion

# CA3006: Review code for process command injection vulnerabilities - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca3006
dotnet_diagnostic.CA3006.severity = suggestion

# CA3007: Review code for open redirect vulnerabilities - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca3007
dotnet_diagnostic.CA3007.severity = suggestion

# CA3008: Review code for XPath injection vulnerabilities - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca3008
dotnet_diagnostic.CA3008.severity = suggestion

# CA3009: Review code for XML injection vulnerabilities - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca3009
dotnet_diagnostic.CA3009.severity = suggestion

# CA3010: Review code for XAML injection vulnerabilities - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca3010
dotnet_diagnostic.CA3010.severity = suggestion

# CA3011: Review code for DLL injection vulnerabilities - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca3011
dotnet_diagnostic.CA3011.severity = suggestion

# CA3012: Review code for regex injection vulnerabilities - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca3012
dotnet_diagnostic.CA3012.severity = suggestion

# CA3061: Do not add schema by URL - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca3061
dotnet_diagnostic.CA3061.severity = suggestion

# CA3075: Insecure DTD Processing - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca3075
dotnet_diagnostic.CA3075.severity = suggestion

# CA3076: Insecure XSLT Script Execution - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca3076
dotnet_diagnostic.CA3076.severity = suggestion

# CA3077: Insecure Processing in API Design, XML Document and XML Text Reader - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca3077
dotnet_diagnostic.CA3077.severity = suggestion

# CA3147: Mark verb handlers with ValidateAntiForgeryToken - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca3147
dotnet_diagnostic.CA3147.severity = suggestion

# CA5350: Do Not Use Weak Cryptographic Algorithms - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca5350
dotnet_diagnostic.CA5350.severity = suggestion

# CA5351: Do Not Use Broken Cryptographic Algorithms - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca5351
dotnet_diagnostic.CA5351.severity = suggestion

# CA5358: Do Not Use Unsafe Cipher Modes - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca5358
dotnet_diagnostic.CA5358.severity = suggestion

# CA5359: Do not disable certificate validation - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca5359
dotnet_diagnostic.CA5359.severity = suggestion

# CA5360: Do not call dangerous methods in deserialization - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca5360
dotnet_diagnostic.CA5360.severity = suggestion

# CA5361: Do not disable SChannel use of strong crypto - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca5361
dotnet_diagnostic.CA5361.severity = suggestion

# CA5362: Potential reference cycle in deserialized object graph - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca5362
dotnet_diagnostic.CA5362.severity = suggestion

# CA5363: Do not disable request validation - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca5363
dotnet_diagnostic.CA5363.severity = suggestion

# CA5364: Do not use deprecated security protocols - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca5364
dotnet_diagnostic.CA5364.severity = suggestion

# CA5365: Do Not Disable HTTP Header Checking - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca5365
dotnet_diagnostic.CA5365.severity = suggestion

# CA5366: Use XmlReader For DataSet Read XML - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca5366
dotnet_diagnostic.CA5366.severity = suggestion

# CA5367: Do not serialize types with pointer fields - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca5367
dotnet_diagnostic.CA5367.severity = suggestion

# CA5368: Set ViewStateUserKey For Classes Derived From Page - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca5368
dotnet_diagnostic.CA5368.severity = suggestion

# CA5369: Use XmlReader for Deserialize - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca5369
dotnet_diagnostic.CA5369.severity = suggestion

# CA5370: Use XmlReader for validating reader - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca5370
dotnet_diagnostic.CA5370.severity = suggestion

# CA5371: Use XmlReader for schema read - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca5371
dotnet_diagnostic.CA5371.severity = suggestion

# CA5372: Use XmlReader for XPathDocument - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca5372
dotnet_diagnostic.CA5372.severity = suggestion

# CA5373: Do not use obsolete key derivation function - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca5373
dotnet_diagnostic.CA5373.severity = suggestion

# CA5374: Do not use XslTransform - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca5374
dotnet_diagnostic.CA5374.severity = suggestion

# CA5375: Do not use account shared access signature - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca5375
dotnet_diagnostic.CA5375.severity = suggestion

# CA5376: Use SharedAccessProtocol HttpsOnly - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca5376
dotnet_diagnostic.CA5376.severity = suggestion

# CA5377: Use container level access policy - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca5377
dotnet_diagnostic.CA5377.severity = suggestion

# CA5378: Do not disable ServicePointManagerSecurityProtocols - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca5378
dotnet_diagnostic.CA5378.severity = suggestion

# CA5379: Ensure key derivation function algorithm is sufficiently strong - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca5379
dotnet_diagnostic.CA5379.severity = suggestion

# CA5380: Do not add certificates to root store - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca5380
dotnet_diagnostic.CA5380.severity = suggestion

# CA5381: Ensure certificates are not added to root store - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca5381
dotnet_diagnostic.CA5381.severity = suggestion

# CA5382: Use secure cookies in ASP.NET Core - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca5382
dotnet_diagnostic.CA5382.severity = suggestion

# CA5383: Ensure use secure cookies in ASP.NET Core - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca5383
dotnet_diagnostic.CA5383.severity = suggestion

# CA5384: Do not use digital signature algorithm (DSA) - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca5384
dotnet_diagnostic.CA5384.severity = suggestion

# CA5385: Use Rivest–Shamir–Adleman (RSA) algorithm with sufficient key size - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca5385
dotnet_diagnostic.CA5385.severity = suggestion

# CA5386: Avoid hardcoding SecurityProtocolType value - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca5386
dotnet_diagnostic.CA5386.severity = suggestion

# CA5387: Do not use weak key derivation function with insufficient iteration count - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca5387
dotnet_diagnostic.CA5387.severity = suggestion

# CA5388: Ensure sufficient iteration count when using weak key derivation function - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca5388
dotnet_diagnostic.CA5388.severity = suggestion

# CA5389: Do not add archive item's path to the target file system path - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca5389
dotnet_diagnostic.CA5389.severity = suggestion

# CA5390: Do not hard-code encryption key - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca5390
dotnet_diagnostic.CA5390.severity = suggestion

# CA5391: Use antiforgery tokens in ASP.NET Core MVC controllers - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca5391
dotnet_diagnostic.CA5391.severity = suggestion

# CA5392: Use DefaultDllImportSearchPaths attribute for P/Invokes - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca5392
dotnet_diagnostic.CA5392.severity = suggestion

# CA5393: Do not use unsafe DllImportSearchPath value - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca5393
dotnet_diagnostic.CA5393.severity = suggestion

# CA5394: Do not use insecure randomness - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca5394
dotnet_diagnostic.CA5394.severity = suggestion

# CA5395: Miss HttpVerb attribute for action methods - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca5395
dotnet_diagnostic.CA5395.severity = suggestion

# CA5396: Set HttpOnly to true for HttpCookie - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca5396
dotnet_diagnostic.CA5396.severity = suggestion

# CA5397: Do not use deprecated SslProtocols values - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca5397
dotnet_diagnostic.CA5397.severity = suggestion

# CA5398: Avoid hardcoded SslProtocols values - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca5398
dotnet_diagnostic.CA5398.severity = suggestion

# CA5399: Enable HttpClient certificate revocation list check - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca5399
dotnet_diagnostic.CA5399.severity = suggestion

# CA5400: Ensure HttpClient certificate revocation list check is not disabled - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca5400
dotnet_diagnostic.CA5400.severity = suggestion

# CA5401: Do not use CreateEncryptor with non-default IV - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca5401
dotnet_diagnostic.CA5401.severity = suggestion

# CA5402: Use CreateEncryptor with the default IV - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca5402
dotnet_diagnostic.CA5402.severity = suggestion

# CA5403: Do not hard-code certificate - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca5403
dotnet_diagnostic.CA5403.severity = suggestion

# CA5404: Do not disable token validation checks - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca5404
dotnet_diagnostic.CA5404.severity = suggestion

# CA5405: Do not always skip token validation in delegates - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca5405
dotnet_diagnostic.CA5405.severity = suggestion


##########################################
# 5.11) Usage Rules
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/usage-warnings
##########################################

# Default severity level of Usage rules - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/usage-warnings
dotnet_analyzer_diagnostic.category-Usage.severity = suggestion

# CA1801: Review unused parameters - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1801
dotnet_diagnostic.CA1801.severity = suggestion

# CA1816: Call GC.SuppressFinalize correctly - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1816
dotnet_diagnostic.CA1816.severity = suggestion

# CA2200: Rethrow to preserve stack details - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2200
dotnet_diagnostic.CA2200.severity = suggestion

# CA2201: Do not raise reserved exception types - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2201
dotnet_diagnostic.CA2201.severity = suggestion

# CA2207: Initialize value type static fields inline - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2207
dotnet_diagnostic.CA2207.severity = suggestion

# CA2208: Instantiate argument exceptions correctly - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2208
dotnet_diagnostic.CA2208.severity = suggestion

# CA2211: Non-constant fields should not be visible - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2211
dotnet_diagnostic.CA2211.severity = suggestion

# CA2213: Disposable fields should be disposed - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2213
dotnet_diagnostic.CA2213.severity = suggestion

# CA2214: Do not call overridable methods in constructors - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2214
dotnet_diagnostic.CA2214.severity = suggestion

# CA2215: Dispose methods should call base class dispose - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2215
dotnet_diagnostic.CA2215.severity = suggestion

# CA2216: Disposable types should declare finalizer - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2216
dotnet_diagnostic.CA2216.severity = suggestion

# CA2217: Do not mark enums with FlagsAttribute - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2217
dotnet_diagnostic.CA2217.severity = suggestion

# CA2218: Override GetHashCode on overriding Equals - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2218
dotnet_diagnostic.CA2218.severity = suggestion

# CA2219: Do not raise exceptions in exception clauses - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2219
dotnet_diagnostic.CA2219.severity = suggestion

# CA2224: Override Equals on overloading operator equals - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2224
dotnet_diagnostic.CA2224.severity = suggestion

# CA2225: Operator overloads have named alternates - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2225
dotnet_diagnostic.CA2225.severity = suggestion

# CA2226: Operators should have symmetrical overloads - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2226
dotnet_diagnostic.CA2226.severity = suggestion

# CA2227: Collection properties should be read only - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2227
dotnet_diagnostic.CA2227.severity = suggestion

# CA2229: Implement serialization constructors - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2229
dotnet_diagnostic.CA2229.severity = suggestion

# CA2231: Overload operator equals on overriding ValueType.Equals - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2231
dotnet_diagnostic.CA2231.severity = suggestion

# CA2234: Pass System.Uri objects instead of strings - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2234
dotnet_diagnostic.CA2234.severity = suggestion

# CA2235: Mark all non-serializable fields - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2235
dotnet_diagnostic.CA2235.severity = suggestion

# CA2237: Mark ISerializable types with SerializableAttribute - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2237
dotnet_diagnostic.CA2237.severity = suggestion

# CA2241: Provide correct arguments to formatting methods - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2241
dotnet_diagnostic.CA2241.severity = suggestion

# CA2242: Test for NaN correctly - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2242
dotnet_diagnostic.CA2242.severity = suggestion

# CA2243: Attribute string literals should parse correctly - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2243
dotnet_diagnostic.CA2243.severity = suggestion

# CA2244: Do not duplicate indexed element initializations - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2244
dotnet_diagnostic.CA2244.severity = suggestion

# CA2245: Do not assign a property to itself - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2245
dotnet_diagnostic.CA2245.severity = suggestion

# CA2246: Do not assign a symbol and its member in the same statement - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2246
dotnet_diagnostic.CA2246.severity = suggestion

# CA2247: Argument passed to TaskCompletionSource constructor should be TaskCreationOptions enum instead of TaskContinuationOptions enum - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2247
dotnet_diagnostic.CA2247.severity = suggestion

# CA2248: Provide correct enum argument to Enum.HasFlag - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2248
dotnet_diagnostic.CA2248.severity = suggestion

# CA2249: Consider using String.Contains instead of String.IndexOf - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2249
dotnet_diagnostic.CA2249.severity = suggestion

# CA2250: Use ThrowIfCancellationRequested - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2250
dotnet_diagnostic.CA2250.severity = suggestion

# CA2251: Use String.Equals over String.Compare - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2251
dotnet_diagnostic.CA2251.severity = suggestion

# CA2252: Opt in to preview features before using them - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2252
dotnet_diagnostic.CA2252.severity = suggestion

# CA2253: Named placeholders should not be numeric values - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2253
dotnet_diagnostic.CA2253.severity = suggestion

# CA2254: Template should be a static expression - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2254
dotnet_diagnostic.CA2254.severity = suggestion

# CA2255: The ModuleInitializer attribute should not be used in libraries - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2255
dotnet_diagnostic.CA2255.severity = suggestion

# CA2256: All members declared in parent interfaces must have an implementation in a DynamicInterfaceCastableImplementation-attributed interface - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2256
dotnet_diagnostic.CA2256.severity = suggestion

# CA2257: Members defined on an interface with the 'DynamicInterfaceCastableImplementationAttribute' should be 'static' - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2257
dotnet_diagnostic.CA2257.severity = suggestion

# CA2258: Providing a 'DynamicInterfaceCastableImplementation' interface in Visual Basic is unsupported - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2258
dotnet_diagnostic.CA2258.severity = suggestion


####################################################################################
#
# 6) Third Party Analyzers - StyleCop
# https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/DOCUMENTATION.md
#
####################################################################################
[*.{cs,csx,cake,vb,vbx}]


##########################################
# 6.1) Special Rules
# https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SpecialRules.md
##########################################

# SA0001: Xml Comment Analysis Disabled - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA0001.md
dotnet_diagnostic.SA0001.severity = suggestion

# SA0002: Invalid Settings File - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA0002.md
dotnet_diagnostic.SA0002.severity = suggestion


##########################################
# 6.2) Spacing Rules
# https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SpacingRules.md
##########################################

# SA1000: Keywords Must Be Spaced Correctly - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1000.md
dotnet_diagnostic.SA1000.severity = suggestion

# SA1001: Commas Must Be Spaced Correctly - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1001.md
dotnet_diagnostic.SA1001.severity = none

# SA1002: Semicolons Must Be Spaced Correctly - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1002.md
dotnet_diagnostic.SA1002.severity = none

# SA1003: Symbols Must Be Spaced Correctly - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1003.md
dotnet_diagnostic.SA1003.severity = none

# SA1004: Documentation Lines Must Begin With Single Space - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1004.md
dotnet_diagnostic.SA1004.severity = suggestion

# SA1005: Single Line Comments Must Begin With Single Space - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1005.md
dotnet_diagnostic.SA1005.severity = suggestion

# SA1006: Preprocessor Keywords Must Not Be Preceded By Space - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1006.md
dotnet_diagnostic.SA1006.severity = suggestion

# SA1007: Operator Keyword Must Be Followed By Space - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1007.md
dotnet_diagnostic.SA1007.severity = suggestion

# SA1008: Opening Parenthesis Must Be Spaced Correctly - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1008.md
dotnet_diagnostic.SA1008.severity = none

# SA1009: Closing Parenthesis Must Be Spaced Correctly - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1009.md
dotnet_diagnostic.SA1009.severity = none

# SA1010: Opening Square Brackets Must Be Spaced Correctly - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1010.md
dotnet_diagnostic.SA1010.severity = none

# SA1011: Closing Square Brackets Must Be Spaced Correctly - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1011.md
dotnet_diagnostic.SA1011.severity = none

# SA1012: Opening Braces Must Be Spaced Correctly - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1012.md
dotnet_diagnostic.SA1012.severity = suggestion

# SA1013: Closing Braces Must Be Spaced Correctly - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1013.md
dotnet_diagnostic.SA1013.severity = suggestion

# SA1014: Opening Generic Brackets Must Be Spaced Correctly - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1014.md
dotnet_diagnostic.SA1014.severity = suggestion

# SA1015: Closing Generic Brackets Must Be Spaced Correctly - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1015.md
dotnet_diagnostic.SA1015.severity = suggestion

# SA1016: Opening Attribute Brackets Must Be Spaced Correctly - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1016.md
dotnet_diagnostic.SA1016.severity = suggestion

# SA1017: Closing Attribute Brackets Must Be Spaced Correctly - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1017.md
dotnet_diagnostic.SA1017.severity = suggestion

# SA1018: Nullable Type Symbols Must Not Be Preceded By Space - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1018.md
dotnet_diagnostic.SA1018.severity = suggestion

# SA1019: Member Access Symbols Must Be Spaced Correctly - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1019.md
dotnet_diagnostic.SA1019.severity = suggestion

# SA1020: Increment Decrement Symbols Must Be Spaced Correctly - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1020.md
dotnet_diagnostic.SA1020.severity = suggestion

# SA1021: Negative Signs Must Be Spaced Correctly - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1021.md
dotnet_diagnostic.SA1021.severity = suggestion

# SA1022: Positive Signs Must Be Spaced Correctly - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1022.md
dotnet_diagnostic.SA1022.severity = suggestion

# SA1023: Dereference And Access Of Must Be Spaced Correctly - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1023.md
dotnet_diagnostic.SA1023.severity = suggestion

# SA1024: Colons Must Be Spaced Correctly - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1024.md
dotnet_diagnostic.SA1024.severity = suggestion

# SA1025: Code Must Not Contain Multiple Whitespace In A Row - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1025.md
dotnet_diagnostic.SA1025.severity = suggestion

# SA1026: Code Must Not Contain Space After New Keyword In Implicitly Typed Array Allocation - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1026.md
dotnet_diagnostic.SA1026.severity = suggestion

# SA1027: Use Tabs Correctly - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1027.md
dotnet_diagnostic.SA1027.severity = none

# SA1028: Code Must Not Contain Trailing Whitespace - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1028.md
dotnet_diagnostic.SA1028.severity = suggestion


##########################################
# 6.3) Readability Rules
# https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/ReadabilityRules.md
##########################################

# SA1100: Do Not Prefix Calls With Base Unless Local Implementation Exists - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1100.md
dotnet_diagnostic.SA1100.severity = suggestion

# SA1101: Prefix Local Calls With This - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1101.md
dotnet_diagnostic.SA1101.severity = none

# SA1102: Query clause should follow previous clause - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1102.md
dotnet_diagnostic.SA1102.severity = none

# SA1103: Query clauses should be on separate lines or all on one line - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1103.md
dotnet_diagnostic.SA1103.severity = none

# SA1104: Query clause should begin on new line when previous clause spans multiple lines - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1104.md
dotnet_diagnostic.SA1104.severity = none

# SA1105: Query clauses spanning multiple lines should begin on own line - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1105.md
dotnet_diagnostic.SA1105.severity = none

# SA1106: Code Must Not Contain Empty Statements - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1106.md
dotnet_diagnostic.SA1106.severity = suggestion

# SA1107: Code Must Not Contain Multiple Statements On One Line - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1107.md
dotnet_diagnostic.SA1107.severity = none

# SA1108: Block Statements Must Not Contain Embedded Comments - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1108.md
dotnet_diagnostic.SA1108.severity = suggestion

# SA1109: Block Statements Must Not Contain Embedded Regions - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1109.md
dotnet_diagnostic.SA1109.severity = none

# SA1110: Opening Parenthesis Must Be On Declaration Line - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1110.md
dotnet_diagnostic.SA1110.severity = suggestion

# SA1111: Closing Parenthesis Must Be On Line Of Last Parameter - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1111.md
dotnet_diagnostic.SA1111.severity = suggestion

# SA1112: Closing Parenthesis Must Be On Line Of Opening Parenthesis - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1112.md
dotnet_diagnostic.SA1112.severity = suggestion

# SA1113: Comma Must Be On Same Line As Previous Parameter - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1113.md
dotnet_diagnostic.SA1113.severity = suggestion

# SA1114: Parameter List Must Follow Declaration - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1114.md
dotnet_diagnostic.SA1114.severity = suggestion

# SA1115: Parameter Must Follow Comma - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1115.md
dotnet_diagnostic.SA1115.severity = suggestion

# SA1116: Split Parameters Must Start On Line After Declaration - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1116.md
dotnet_diagnostic.SA1116.severity = suggestion

# SA1117: Parameters Must Be On Same Line Or Separate Lines - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1117.md
dotnet_diagnostic.SA1117.severity = suggestion

# SA1118: Parameter Must Not Span Multiple Lines - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1118.md
dotnet_diagnostic.SA1118.severity = suggestion

# SA1119: Statement Must Not Use Unnecessary Parenthesis - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1119.md
dotnet_diagnostic.SA1119.severity = none

# SA1120: Comments Must Contain Text - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1120.md
dotnet_diagnostic.SA1120.severity = suggestion

# SA1121: Use Built In Type Alias - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1121.md
dotnet_diagnostic.SA1121.severity = none

# SA1122: Use String Empty For Empty Strings - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1122.md
dotnet_diagnostic.SA1122.severity = suggestion

# SA1123: Do Not Place Regions Within Elements - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1123.md
dotnet_diagnostic.SA1123.severity = none

# SA1124: Do Not Use Regions - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1124.md
dotnet_diagnostic.SA1124.severity = suggestion

# SA1125: Use Shorthand For Nullable Types - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1125.md
dotnet_diagnostic.SA1125.severity = suggestion

# SA1126: Prefix Calls Correctly - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1126.md
dotnet_diagnostic.SA1126.severity = none

# SA1127: Generic Type Constraints Must Be On Own Line - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1127.md
dotnet_diagnostic.SA1127.severity = suggestion

# SA1128: Constructor Initializer Must Be On Own Line - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1128.md
dotnet_diagnostic.SA1128.severity = suggestion

# SA1129: Do Not Use Default Value Type Constructor - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1129.md
dotnet_diagnostic.SA1129.severity = suggestion

# SA1130: Use Lambda Syntax - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1130.md
dotnet_diagnostic.SA1130.severity = none

# SA1131: Use Readable Conditions - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1131.md
dotnet_diagnostic.SA1131.severity = suggestion

# SA1132: Do Not Combine Fields - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1132.md
dotnet_diagnostic.SA1132.severity = suggestion

# SA1133: Do Not Combine Attributes - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1133.md
dotnet_diagnostic.SA1133.severity = suggestion

# SA1134: Attributes Must Not Share Line - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1134.md
dotnet_diagnostic.SA1134.severity = suggestion

# SA1135: Using Directives Must Be Qualified - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1135.md
dotnet_diagnostic.SA1135.severity = suggestion

# SA1136: Enum Values Should Be On Separate Lines - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1136.md
dotnet_diagnostic.SA1136.severity = suggestion

# SA1137: Elements Should Have The Same Indentation - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1137.md
dotnet_diagnostic.SA1137.severity = suggestion

# SA1139: Use Literals Suffix Notation Instead Of Casting - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1139.md
dotnet_diagnostic.SA1139.severity = suggestion

# SA1141: Use Tuple Syntax - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1141.md
dotnet_diagnostic.SA1141.severity = suggestion

# SA1142: Refer To Tuple Elements By Name - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1142.md
dotnet_diagnostic.SA1142.severity = none


##########################################
# 6.4) Ordering Rules
# https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/OrderingRules.md
##########################################

# SA1200: Using Directives Must Be Placed Correctly - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1200.md
dotnet_diagnostic.SA1200.severity = none

# SA1201: Elements Must Appear In The Correct Order - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1201.md
dotnet_diagnostic.SA1201.severity = suggestion

# SA1202: Elements Must Be Ordered By Access - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1202.md
dotnet_diagnostic.SA1202.severity = suggestion

# SA1203: Constants Must Appear Before Fields - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1203.md
dotnet_diagnostic.SA1203.severity = suggestion

# SA1204: Static Elements Must Appear Before Instance Elements - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1204.md
dotnet_diagnostic.SA1204.severity = suggestion

# SA1205: Partial Elements Must Declare Access - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1205.md
dotnet_diagnostic.SA1205.severity = suggestion

# SA1206: Declaration Keywords Must Follow Order - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1206.md
dotnet_diagnostic.SA1206.severity = suggestion

# SA1207: Protected Must Come Before Internal - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1207.md
dotnet_diagnostic.SA1207.severity = suggestion

# SA1208: System Using Directives Must Be Placed Before Other Using Directives - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1208.md
dotnet_diagnostic.SA1208.severity = none

# SA1209: Using Alias Directives Must Be Placed After Other Using Directives - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1209.md
dotnet_diagnostic.SA1209.severity = suggestion

# SA1210: Using Directives Must Be Ordered Alphabetically By Namespace - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1210.md
dotnet_diagnostic.SA1210.severity = suggestion

# SA1211: Using Alias Directives Must Be Ordered Alphabetically By Alias Name - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1211.md
dotnet_diagnostic.SA1211.severity = suggestion

# SA1212: Property Accessors Must Follow Order - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1212.md
dotnet_diagnostic.SA1212.severity = suggestion

# SA1213: Event Accessors Must Follow Order - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1213.md
dotnet_diagnostic.SA1213.severity = suggestion

# SA1214: Readonly Elements Must Appear Before Non Readonly Elements - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1214.md
dotnet_diagnostic.SA1214.severity = suggestion

# SA1215: Instance Readonly Elements Must Appear Before Instance Non Readonly Elements - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1215.md
dotnet_diagnostic.SA1215.severity = none

# SA1216: Using Static Directives Must Be Placed At The Correct Location - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1216.md
dotnet_diagnostic.SA1216.severity = suggestion

# SA1217: Using Static Directives Must Be Ordered Alphabetically - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1217.md
dotnet_diagnostic.SA1217.severity = suggestion


##########################################
# 6.5) Naming Rules
# https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/NamingRules.md
##########################################

# SA1300: Element Must Begin With Upper Case Letter - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1300.md
dotnet_diagnostic.SA1300.severity = none

# SA1301: Element Must Begin With Lower Case Letter - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1301.md
dotnet_diagnostic.SA1301.severity = none

# SA1302: Interface Names Must Begin With I - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1302.md
dotnet_diagnostic.SA1302.severity = none

# SA1303: Const Field Names Must Begin With Upper Case Letter - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1303.md
dotnet_diagnostic.SA1303.severity = none

# SA1304: Non Private Readonly Fields Must Begin With Upper Case Letter - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1304.md
dotnet_diagnostic.SA1304.severity = none

# SA1305: Field Names Must Not Use Hungarian Notation - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1305.md
dotnet_diagnostic.SA1305.severity = none

# SA1306: Field Names Must Begin With Lower Case Letter - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1306.md
dotnet_diagnostic.SA1306.severity = none

# SA1307: Accessible Fields Must Begin With Upper Case Letter - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1307.md
dotnet_diagnostic.SA1307.severity = none

# SA1308: Variable Names Must Not Be Prefixed - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1308.md
dotnet_diagnostic.SA1308.severity = none

# SA1309: Field Names Must Not Begin With Underscore - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1309.md
dotnet_diagnostic.SA1309.severity = none

# SA1310: Field Names Must Not Contain Underscore - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1310.md
dotnet_diagnostic.SA1310.severity = none

# SA1311: Static Readonly Fields Must Begin With Upper Case Letter - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1311.md
dotnet_diagnostic.SA1311.severity = none

# SA1312: Variable Names Must Begin With Lower Case Letter - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1312.md
dotnet_diagnostic.SA1312.severity = none

# SA1313: Parameter Names Must Begin With Lower Case Letter - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1313.md
dotnet_diagnostic.SA1313.severity = none

# SA1314: Type Parameter Names Must Begin With T - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1314.md
dotnet_diagnostic.SA1314.severity = none

# SA1316: Tuple Element Names Should Use Correct Casing - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1316.md
dotnet_diagnostic.SA1316.severity = none


##########################################
# 6.6) Maintainability Rules
# https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/MaintainabilityRules.md
##########################################

# SA1119: Statement Must Not Use Unnecessary Parenthesis - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1119.md
dotnet_diagnostic.SA1119.severity = none

# SA1400: Access Modifier Must Be Declared - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1400.md
dotnet_diagnostic.SA1400.severity = none

# SA1401: Fields Must Be Private - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1401.md
dotnet_diagnostic.SA1401.severity = suggestion

# SA1402: File May Only Contain A Single Type - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1402.md
dotnet_diagnostic.SA1402.severity = suggestion

# SA1403: File May Only Contain A Single Namespace - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1403.md
dotnet_diagnostic.SA1403.severity = suggestion

# SA1404: Code Analysis Suppression Must Have Justification - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1404.md
dotnet_diagnostic.SA1404.severity = suggestion

# SA1405: Debug Assert Must Provide Message Text - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1405.md
dotnet_diagnostic.SA1405.severity = suggestion

# SA1406: Debug Fail Must Provide Message Text - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1406.md
dotnet_diagnostic.SA1406.severity = suggestion

# SA1407: Arithmetic Expressions Must Declare Precedence - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1407.md
dotnet_diagnostic.SA1407.severity = none

# SA1408: Conditional Expressions Must Declare Precedence - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1408.md
dotnet_diagnostic.SA1408.severity = none

# SA1409: Remove Unnecessary Code - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1409.md
dotnet_diagnostic.SA1409.severity = none

# SA1410: Remove Delegate Parenthesis When Possible - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1410.md
dotnet_diagnostic.SA1410.severity = suggestion

# SA1411: Attribute Constructor Must Not Use Unnecessary Parenthesis - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1411.md
dotnet_diagnostic.SA1411.severity = suggestion

# SA1412: Store Files As Utf8 - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1412.md
dotnet_diagnostic.SA1412.severity = none

# SA1413: Use Trailing Commas In MultiLine Initializers - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1413.md
dotnet_diagnostic.SA1413.severity = suggestion

# SA1414: Tuple Types In Signatures Should Have Element Names - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1414.md
dotnet_diagnostic.SA1414.severity = suggestion


##########################################
# 6.7) Layout Rules
# https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/LayoutRules.md
##########################################

# SA1500: Braces For MultiLine Statements Must Not Share Line - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1500.md
dotnet_diagnostic.SA1500.severity = none

# SA1501: Statement Must Not Be On Single Line - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1501.md
dotnet_diagnostic.SA1501.severity = none

# SA1502: Element Must Not Be On Single Line - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1502.md
dotnet_diagnostic.SA1502.severity = suggestion

# SA1503: Braces Must Not Be Omitted - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1503.md
dotnet_diagnostic.SA1503.severity = none

# SA1504: All Accessors Must Be Single Line Or Multi Line - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1504.md
dotnet_diagnostic.SA1504.severity = suggestion

# SA1505: Opening Braces Must Not Be Followed By Blank Line - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1505.md
dotnet_diagnostic.SA1505.severity = suggestion

# SA1506: Element Documentation Headers Must Not Be Followed By Blank Line - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1506.md
dotnet_diagnostic.SA1506.severity = suggestion

# SA1507: Code Must Not Contain Multiple Blank Lines In A Row - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1507.md
dotnet_diagnostic.SA1507.severity = none

# SA1508: Closing Braces Must Not Be Preceded By Blank Line - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1508.md
dotnet_diagnostic.SA1508.severity = suggestion

# SA1509: Opening Braces Must Not Be Preceded By Blank Line - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1509.md
dotnet_diagnostic.SA1509.severity = suggestion

# SA1510: Chained Statement Blocks Must Not Be Preceded By Blank Line - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1510.md
dotnet_diagnostic.SA1510.severity = suggestion

# SA1511: While Do Footer Must Not Be Preceded By Blank Line - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1511.md
dotnet_diagnostic.SA1511.severity = suggestion

# SA1512: Single Line Comments Must Not Be Followed By Blank Line - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1512.md
dotnet_diagnostic.SA1512.severity = suggestion

# SA1513: Closing Brace Must Be Followed By Blank Line - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1513.md
dotnet_diagnostic.SA1513.severity = suggestion

# SA1514: Element Documentation Header Must Be Preceded By Blank Line - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1514.md
dotnet_diagnostic.SA1514.severity = suggestion

# SA1515: Single Line Comment Must Be Preceded By Blank Line - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1515.md
dotnet_diagnostic.SA1515.severity = suggestion

# SA1516: Elements Must Be Separated By Blank Line - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1516.md
dotnet_diagnostic.SA1516.severity = suggestion

# SA1517: Code Must Not Contain Blank Lines At Start Of File - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1517.md
dotnet_diagnostic.SA1517.severity = suggestion

# SA1518: Use Line Endings Correctly At End Of File - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1518.md
dotnet_diagnostic.SA1518.severity = suggestion

# SA1519: Braces Must Not Be Omitted From Multi Line Child Statement - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1519.md
dotnet_diagnostic.SA1519.severity = suggestion

# SA1520: Use Braces Consistently - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1520.md
dotnet_diagnostic.SA1520.severity = none


##########################################
# 6.8) Documentation Rules
# https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/DocumentationRules.md
##########################################

# SA1600: Elements Must Be Documented - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1600.md
dotnet_diagnostic.SA1600.severity = suggestion

# SA1601: Partial Elements Must Be Documented - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1601.md
dotnet_diagnostic.SA1601.severity = suggestion

# SA1602: Enumeration Items Must Be Documented - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1602.md
dotnet_diagnostic.SA1602.severity = none

# SA1603: Documentation Must Contain Valid Xml - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1603.md
dotnet_diagnostic.SA1603.severity = none

# SA1604: Element Documentation Must Have Summary - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1604.md
dotnet_diagnostic.SA1604.severity = suggestion

# SA1605: Partial Element Documentation Must Have Summary - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1605.md
dotnet_diagnostic.SA1605.severity = suggestion

# SA1606: Element Documentation Must Have Summary Text - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1606.md
dotnet_diagnostic.SA1606.severity = suggestion

# SA1607: Partial Element Documentation Must Have Summary Text - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1607.md
dotnet_diagnostic.SA1607.severity = suggestion

# SA1608: Element Documentation Must Not Have Default Summary - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1608.md
dotnet_diagnostic.SA1608.severity = suggestion

# SA1609: Property Documentation Must Have Value - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1609.md
dotnet_diagnostic.SA1609.severity = suggestion

# SA1610: Property Documentation Must Have Value Text - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1610.md
dotnet_diagnostic.SA1610.severity = suggestion

# SA1611: Element Parameters Must Be Documented - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1611.md
dotnet_diagnostic.SA1611.severity = suggestion

# SA1612: Element Parameter Documentation Must Match Element Parameters - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1612.md
dotnet_diagnostic.SA1612.severity = suggestion

# SA1613: Element Parameter Documentation Must Declare Parameter Name - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1613.md
dotnet_diagnostic.SA1613.severity = suggestion

# SA1614: Element Parameter Documentation Must Have Text - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1614.md
dotnet_diagnostic.SA1614.severity = suggestion

# SA1615: Element Return Value Must Be Documented - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1615.md
dotnet_diagnostic.SA1615.severity = suggestion

# SA1616: Element Return Value Documentation Must Have Text - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1616.md
dotnet_diagnostic.SA1616.severity = suggestion

# SA1617: Void Return Value Must Not Be Documented - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1617.md
dotnet_diagnostic.SA1617.severity = suggestion

# SA1618: Generic Type Parameters Must Be Documented - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1618.md
dotnet_diagnostic.SA1618.severity = suggestion

# SA1619: Generic Type Parameters Must Be Documented Partial Class - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1619.md
dotnet_diagnostic.SA1619.severity = suggestion

# SA1620: Generic Type Parameter Documentation Must Match Type Parameters - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1620.md
dotnet_diagnostic.SA1620.severity = suggestion

# SA1621: Generic Type Parameter Documentation Must Declare Parameter Name - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1621.md
dotnet_diagnostic.SA1621.severity = suggestion

# SA1622: Generic Type Parameter Documentation Must Have Text - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1622.md
dotnet_diagnostic.SA1622.severity = suggestion

# SA1623: Property Summary Documentation Must Match Accessors - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1623.md
dotnet_diagnostic.SA1623.severity = suggestion

# SA1624: Property Summary Documentation Must Omit Set Accessor With Restricted Access - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1624.md
dotnet_diagnostic.SA1624.severity = suggestion

# SA1625: Element Documentation Must Not Be Copied And Pasted - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1625.md
dotnet_diagnostic.SA1625.severity = suggestion

# SA1626: Single Line Comments Must Not Use Documentation Style Slashes - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1626.md
dotnet_diagnostic.SA1626.severity = suggestion

# SA1627: Documentation Text Must Not BeEmpty - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1627.md
dotnet_diagnostic.SA1627.severity = suggestion

# SA1628: Documentation Text Must Begin With A Capital Letter - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1628.md
dotnet_diagnostic.SA1628.severity = none

# SA1629: Documentation Text Must End With A Period - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1629.md
dotnet_diagnostic.SA1629.severity = suggestion

# SA1630: Documentation Text Must Contain Whitespace - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1630.md
dotnet_diagnostic.SA1630.severity = none

# SA1631: Documentation Must Meet Character Percentage - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1631.md
dotnet_diagnostic.SA1631.severity = none

# SA1632: Documentation Text Must Meet Minimum Character Length - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1632.md
dotnet_diagnostic.SA1632.severity = none

# SA1633: File Must Have Header - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1633.md
dotnet_diagnostic.SA1633.severity = none

# SA1634: File Header Must Show Copyright - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1634.md
dotnet_diagnostic.SA1634.severity = none

# SA1635: File Header Must Have Copyright Text - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1635.md
dotnet_diagnostic.SA1635.severity = none

# SA1636: File Header Copyright Text Must Match - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1636.md
dotnet_diagnostic.SA1636.severity = none

# SA1637: File Header Must Contain File Name - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1637.md
dotnet_diagnostic.SA1637.severity = none

# SA1638: File Header File Name Documentation Must Match File Name - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1638.md
dotnet_diagnostic.SA1638.severity = none

# SA1639: File Header Must Have Summary - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1639.md
dotnet_diagnostic.SA1639.severity = none

# SA1640: File Header Must Have Valid Company Text - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1640.md
dotnet_diagnostic.SA1640.severity = none

# SA1641: File Header Company Name Text Must Match - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1641.md
dotnet_diagnostic.SA1641.severity = none

# SA1642: Constructor Summary Documentation Must Begin With Standard Text - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1642.md
dotnet_diagnostic.SA1642.severity = suggestion

# SA1643: Destructor Summary Documentation Must Begin With Standard Text - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1643.md
dotnet_diagnostic.SA1643.severity = suggestion

# SA1644: Documentation Headers Must Not Contain Blank Lines - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1644.md
dotnet_diagnostic.SA1644.severity = none

# SA1645: Included Documentation File Does Not Exist - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1645.md
dotnet_diagnostic.SA1645.severity = none

# SA1646: Included Documentation XPath Does Not Exist - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1646.md
dotnet_diagnostic.SA1646.severity = none

# SA1647: Include Node Does Not Contain Valid File And Path - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1647.md
dotnet_diagnostic.SA1647.severity = none

# SA1648: Inherit Doc Must Be Used With Inheriting Class - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1648.md
dotnet_diagnostic.SA1648.severity = suggestion

# SA1649: File Name Must Match Type Name - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1649.md
dotnet_diagnostic.SA1649.severity = suggestion

# SA1650: Element Documentation Must Be Spelled Correctly - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1650.md
dotnet_diagnostic.SA1650.severity = none

# SA1651: Do Not Use Placeholder Elements - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1651.md
dotnet_diagnostic.SA1651.severity = suggestion

# SA1652: Enable Xml Documentation Output - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1652.md
dotnet_diagnostic.SA1652.severity = suggestion


##########################################
# 6.8) Alternative Rules
# https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/AlternativeRules.md
##########################################

# SX1101: Do Not Prefix Local Members With This - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SX1101.md
dotnet_diagnostic.SX1101.severity = none

# SX1309: Field Names Must Begin With Underscore - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SX1309.md
dotnet_diagnostic.SX1309.severity = none

# SX1309S: Static Field Names Must Begin With Underscore - https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SX1309S.md
dotnet_diagnostic.SX1309S.severity = none


####################################################################################
#
# 7) Third Party Analyzers - SonarQube
# https://rules.sonarsource.com/csharp
#
####################################################################################
[*.{cs,csx,cake,vb,vbx}]

####################################################################################
#
# 8) Suppressed .NET Compiler Warnings
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/
#
####################################################################################
[*.{cs,csx,cake,vb,vbx}]

# CS1591: Missing XML comment for publicly visible type or member - https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/compiler-messages/cs1591
dotnet_diagnostic.CS1591.severity = suggestion